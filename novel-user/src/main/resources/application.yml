server:
  undertow:
    # 每块buffer的空间大小，越小空间被利用越充分
    # 不要设置太大，以免影响其他应用，合适即可
    buffer-size: ${SERVER_UNDERTOW_BUFFER_SIZE:1024}
    # 是否分配的直接内存(NIO直接分配的堆外内存)，默认false
    direct-buffers: true
    # HTTP POST请求最大的大小，默认0，无限制，可设置10M
    max-http-post-size: 10485760
    threads:
      # 设置IO线程数, 它主要执行非阻塞的任务,它们会负责多个连接
      # 默认值为8，建议设置每个CPU核心一个线程
      io: ${SERVER_UNDERTOW_IO_THREADS:8}
      # 阻塞任务线程池, 当执行类似servlet请求阻塞操作, undertow会从这个线程池中取得线程
      # 默认等于 io-threads*8，它的值设置取决于系统的负载，可适当调大该值
      worker: ${SERVER_UNDERTOW_WORKER_THREADS:128}

spring:
  application:
    name: novel-user
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:mysql://localhost:3306/novel_cloud?useSSL=false&useUnicode=true&characterEncoding=utf-8&zeroDateTimeBehavior=convertToNull&serverTimezone=GMT%2B8&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&allowPublicKeyRetrieval=true}
    username: ${SPRING_DATASOURCE_USERNAME:root}
    password: ${SPRING_DATASOURCE_PASSWORD:root}
    driver-class-name: com.mysql.cj.jdbc.Driver
    hikari:
      # 最小空闲连接数量
      minimum-idle: 5
      # 空闲连接存活最大时间，默认600000（10分钟）
      idle-timeout: 180000
      # 连接池最大连接数，默认是10
      maximum-pool-size: 10
      # 此属性控制从池返回的连接的默认自动提交行为,默认值：true
      auto-commit: true
      # 此属性控制池中连接的最长生命周期，值0表示无限生命周期，默认1800000即30分钟
      max-lifetime: 1800000
      # 数据库连接超时时间,默认30秒，即30000
      connection-timeout: 30000
      # 数据库连接池连接存活校验语句
      connection-test-query: SELECT 1
  jpa:
    # 开启事务外也可以访问懒加载的关联数据
    open-in-view: true
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL8Dialect
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        show_sql: true
        use_sql_comments: true
        format_sql: true
  cloud:
    loadbalancer:
      retry:
        # 是否重试
        enabled: ${SPRING_CLOUD_LB_RETRY_ENABLED:false}
        # 重试下一个实例的次数
        max-retries-on-next-service-instance: ${SPRING_CLOUD_LB_RETRY_NEXT:1}
        # 重试同一个实例的次数
        max-retries-on-same-service-instance: ${SPRING_CLOUD_LB_RETRY_SAME:0}
      cache:
        # LB 中缓存实例的过期时间
        ttl: ${SPRING_CLOUD_LB_CACHE_TTL:10s}

feign:
  circuitbreaker:
    # 启用断路器
    enabled: ${FEIGN_CIRCUITBREAKER_ENABLED:true}
  # 请求压缩配置
  compression:
    request:
      # 配置请求GZIP压缩
      enabled: ${FEIGN_COMPRESSION_REQUEST_ENABLED:true}
      # 配置压缩数据大小的下限
      min-request-size: ${FEIGN_COMPRESSION_REQUEST_MIN_REQUEST_SIZE:2048}
  # Feign客户端配置
  client:
    config:
      # Feign客户端默认配置
      default:
        # 连接超时
        connectTimeout: ${FEIGN_CLIENT_CONFIG_DEFAULT_CONNECT_TIMEOUT:2000}
        # 读取超时
        readTimeout: ${FEIGN_CLIENT_CONFIG_DEFAULT_READ_TIMEOUT:5000}
        # Feign日志级别：NONE/BASIC/HEADERS/FULL
        loggerLevel: ${FEIGN_CLIENT_CONFIG_DEFAULT_LOGGER_LEVEL:FULL}

logging:
  level:
    root: info
    org.springframework.cloud: info
    io.github.resilience4j: info
    com.netflix.discovery: warn
    org.apache.ibatis: debug
    # org.hibernate.type.descriptor.sql.BasicBinder: trace
    # org.hibernate.type.descriptor.sql.BasicExtractor: trace
